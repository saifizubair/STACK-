
package com.company;

import java.io.*;
import java.util.Arrays;
import java.util.Scanner;
import java.util.Stack;


public class Main {

    public static int precedence(char oprtor){
        if(oprtor =='+'){
            return 1;
        }
        else if (oprtor=='-'){
            return 1;
        }
        else if (oprtor=='*'){
            return 2;
        }
        else {
            return 2;
        }
    }
    public static int opreation (int val1 , int val2 , char oprtor){
        if(oprtor =='+'){
            return val1 +val2;
        }
        else if (oprtor=='-'){
            return val1-val2;
        }
        else if (oprtor=='*'){
            return val1*val2;
        }
        else {
            return val1/val2;
        }
    }

    public static void main(String[] args)throws Exception{
        BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
        String exp = br.readLine();
        Stack<Integer>oprands=new Stack<>();
        Stack<Character>oprtors =new Stack<>();
        for(int i =0;i<exp.length();i++){
            char ch=exp.charAt(i);
            if(ch=='('){
                oprtors.push(ch);
            }
            else if (Character.isDigit(ch)){
                oprands.push(ch-'0');
            }
            else if (ch==')'){
                while (oprtors.peek()!='('){
                    char oprtor =oprtors.pop();
                    int val2 =oprands.pop();
                    int val1 =oprands.pop();
                    int opv =opreation(val1,val2,oprtor);
                    oprands.push(opv);
                }
                oprtors.pop();
            }
            else if (ch=='+'||ch=='-'||ch=='*'||ch=='/') {
                while (oprtors.size()>0&&oprtors.peek()!='('&& precedence(ch)<=precedence(oprtors.peek())){
                    char oprtor =oprtors.pop();
                    int val2 =oprands.pop();
                    int val1 =oprands.pop();
                    int opv =opreation(val1,val2,oprtor);
                    oprands.push(opv);
                }
                oprtors.push(ch);
            }
        }
        while (oprtors.size()!=0){
            char oprtor =oprtors.pop();
            int val2 =oprands.pop();
            int val1 =oprands.pop();
            int opv =opreation(val1,val2,oprtor);
            oprands.push(opv);
        }
        System.out.println(oprands.peek());
    }
}
